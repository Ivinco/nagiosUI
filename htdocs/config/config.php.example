<?php

/* you need to change htdocs/config/config.php.example file
   content and rename file to nagios2Config.php: */


/* status.dat file path */
$statusFile_global        = '/var/log/nagios/status.dat';

/* nagios notes url file path */
$getNotesUrls_cacheFile   = '/domain/tmp/nagios_notes_url.cache';

/* nagios depends file path */
$getDepends_cacheFile     = '/domain/tmp/nagios_depends.cache';

/* nagios alerts critical 50pct file path */
$alertsPercentile_global  = '/domain/tmp/nagios_percentile/alerts_critical_50pct';

/* nagios percentile durations file path */
$durationsFromFile_global = '/domain/tmp/nagios_percentile/durations';

/* nagios xml output path */
$xmlArchive               = '/domain/log/nagios_xml_output/';

/* nagios config file path */
$nagiosConfigFile         = '/cgi-bin/config.cgi';

/* nagios full host url */
$nagiosFullHostUrl        = '/cgi-bin/status.cgi?hostgroup=all&;style=hostdetail';

/* nagios comments url */
$nagiosCommentUrl         = '<a href=url/view.php?id=$2" target="_blank">$1</a>';

/* nagios percentile file path */
$nagiosPercentileUrl      = '/url/tmp/nagios_percentile';

/* nagios.cmd file path */
$nagiosPipe               = '/var/log/nagios/rw/nagios.cmd';

/* user name/email array for gravatar.com icons. leave default value */
$usersArray = array(
	'dev'      => 'dev@domain.com',
	'admin'    => 'admin@domain.com',
	'default'  => 'djshdsjkhd@dkjshjsh.com',
);

/* grouping by Service count */
$groupByService = 2;

/* grouping by Host count */
$groupByHost    = 11;

/* refresh select values in seconds */
$refreshArray   = [
	[ 'value' =>  '10', 'name' => '10 sec' ],
	[ 'value' =>  '20', 'name' => '20 sec' ],
	[ 'value' =>  '40', 'name' => '40 sec' ],
	[ 'value' =>  '60', 'name' =>  '1 min' ],
	[ 'value' => '120', 'name' =>  '2 min' ],
	[ 'value' => '180', 'name' =>  '3 min' ],
	[ 'value' => '300', 'name' =>  '5 min' ],
	[ 'value' => '600', 'name' => '10 min' ],
];

/* Planned Maintenance file (full path to file) */
$plannedUrl = '/full_path/planned.json';

/*
   Planned Maintenance template:
	  - first array element: template name (visible in planned tab)
	  - second array element: maintenance command:
		 - ${host} will be prompt before activation to add host
		 - ${service} will be prompt before activation to add service
		 - if you don't want to add host/service you can use it: log*_*error*
	  - third array element is optional: Maintenance Time (minutes):
		 - if element isn't in array then will be prompt before activation to add Maintenance Time (minutes)
*/
$plannedTemplates = [
	['Server reboot', '${host}_*', 60],
	['Log errors', 'log*_*error*'],
];

/* Memcache Host */
$memcacheHost = 'localhost';

/* Memcache Port */
$memcachePort = 12345;

/* memcache key (if you have few nagiosUI) */
$memcacheName = 'nagiosUI';

/* enable/disable memcache usage */
$memcacheEnabled = true;

function hostUrl($host) {
	return 'https://monitor.domain.com/nagios/cgi-bin/status.cgi?host='. $host;
}

function serviceUrl($host, $service) {
   if ($service == 'SERVER+IS+UP') {
		return 'https://monitor.domain.com/nagios/cgi-bin/extinfo.cgi?type=1&amp;host='. $host;
	}
	
	return 'https://monitor.domain.com/nagios/cgi-bin/extinfo.cgi?type=2&amp;host='. $host .'&amp;service='. $service;
}

/* Access control - if enabled: only users who are in /etc/nagios/contacts/contactgroups.cfg or in /etc/nagios/services (contact_groups|contacts) can see alerts */
$accessControl           = true;

/* Super users can see all alerts */
$accessControlSuperUsers = ['admin'];

/* Contact group URL */
$accessControlGroupUrl   = '/etc/nagios/contacts/contactgroups.cfg';

/* Services URL */
$accessControlServiceUrl = '/etc/nagios/services';


/* enable/disable last comments for acknowledge and schedule downtime */
$commentsSelect            = false;

/* command example only for host */
$commentsSelectHost        = "mysql -hhost -uuser -ppassword -NB database -e \"select comment, max(logged) last_seen from table where comment != 'temp' AND host = '<host>' group by comment order by last_seen desc limit 10\" 2>&1";

/* command example only for service */
$commentsSelectService     = "mysql -hhost -uuser -ppassword -NB database -e \"select comment, max(logged) last_seen from table where comment != 'temp' AND service = '<service>' group by comment order by last_seen desc limit 10\" 2>&1";

/* command example only for host & service */
$commentsSelectHostService = "mysql -hhost -uuser -ppassword -NB database -e \"select comment, max(logged) last_seen from table where comment != 'temp' AND host = '<host>' AND service = '<service>' group by comment order by last_seen desc limit 10\" 2>&1";
